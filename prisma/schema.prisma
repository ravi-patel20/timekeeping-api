generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Property {
  id         String      @id @default(uuid())
  code       String      @unique
  email      String
  name       String?
  createdAt  DateTime    @default(now())
  employees  Employee[]
  magicLinks MagicLink[]
}

model MagicLink {
  id         String   @id @default(uuid())
  token      String   @unique
  deviceId   String
  verified   Boolean  @default(false)
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  propertyId String
  property   Property @relation(fields: [propertyId], references: [id])
}

model Employee {
  id             String               @id @default(uuid())
  passcode       String
  propertyId     String
  isAdmin        Boolean              @default(false)
  email          String?
  payType        String               @default("hourly")
  phone          String?
  status         String               @default("active")
  firstName      String
  lastName       String
  payAmountCents Int?
  clockLogs      ClockLog[]
  property       Property             @relation(fields: [propertyId], references: [id])
  payHistory     EmployeePayHistory[]

  @@unique([propertyId, passcode])
}

model ClockLog {
  id         String    @id @default(uuid())
  type       ClockType
  timestamp  DateTime  @default(now())
  employeeId String
  employee   Employee  @relation(fields: [employeeId], references: [id])
}

model DeviceSession {
  id         String   @id @default(uuid())
  token      String   @unique
  deviceId   String
  propertyId String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
}

model EmployeePayHistory {
  id          String   @id @default(uuid())
  employeeId  String
  amountCents Int?
  payType     String?
  effectiveAt DateTime @default(now())
  createdAt   DateTime @default(now())
  employee    Employee @relation(fields: [employeeId], references: [id])

  @@index([employeeId, effectiveAt])
}

model AdminSession {
  id         String   @id @default(uuid())
  token      String   @unique
  propertyId String
  employeeId String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
}

enum ClockType {
  IN
  OUT
}
